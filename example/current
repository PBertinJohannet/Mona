
data Bool =
  | True = Bool
  | False = Bool;

data Prod a b = 
  | P = a -> b -> Prod a b;

data D a b = 
  | CI = Int -> Int -> D Int Int
  | CB = Bool -> Bool -> D Bool Bool
  | CR = k a b -> c -> D (k a b)c
  | CA = a -> c -> D a c
  | CD = D a b -> c -> D (D a b)c;

let correct a = (\b -> case b of
  (CI i j) -> P (i + 1) 2,
  (CR i j) -> P i (case True of
    True -> 2),
  (CB b j) -> P b 0) ((case a of 
    True -> 0,
    False -> 2));


let main = printInt 4;