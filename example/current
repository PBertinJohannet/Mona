
data Bool =
  | True = Bool
  | False = Bool;

data Prod a b = 
  | P = a -> b -> Prod a b;

data D a b = 
  | CI = Int -> Int -> D Int Int
  | CB = Bool -> Bool -> D Bool Bool
  | CR = k a b -> c -> D (k a b)c
  | CA = a -> c -> D a c
  | CD = D a b -> c -> D (D a b)c;

let correct = \a -> case a of
  (CR (P i (True)) j) -> P (i + 1) (j),
  (CI i j) -> P i 1,
  (CB b j) -> P b 1,
  (CA i j) -> P i 1;

let main = printInt 4;